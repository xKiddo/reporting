.list-reset {
  padding: 0;
  list-style-type: none;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .d#{$infix}-none         { display: none !important; }
    .d#{$infix}-inline       { display: inline !important; }
    .d#{$infix}-inline-block { display: inline-block !important; }
    .d#{$infix}-block        { display: block !important; }
    .d#{$infix}-table        { display: table !important; }
    .d#{$infix}-table-cell   { display: table-cell !important; }
    .d#{$infix}-table-row    { display: table-row !important; }
    .d#{$infix}-flex         { display: flex !important; }
    .d#{$infix}-inline-flex  { display: inline-flex !important; }
    .d#{$infix}-contents  	 { display: contents !important; }

    .w#{$infix}-auto { width: auto  !important; }
    .w#{$infix}-0    { width: 0 !important; }
    .w#{$infix}-10   { width: 10% !important; }
    .w#{$infix}-25   { width: 25% !important; }
    .w#{$infix}-33   { width: math.div(100%, 3) !important; }
    .w#{$infix}-50   { width: 50% !important; }
    .w#{$infix}-66   { width: math.div(100%, 3)*2 !important; }
    .w#{$infix}-75   { width: 75% !important; }
    .w#{$infix}-100  { width: 100% !important; }

    .mw#{$infix}-none { max-width: none !important; }
    .mw#{$infix}-0		{ max-width: 0 !important; }
    .mw#{$infix}-10   { max-width: 10% !important; }
    .mw#{$infix}-25   { max-width: 25% !important; }
    .mw#{$infix}-33   { max-width: math.div(100%, 3) !important; }
    .mw#{$infix}-50   { max-width: 50% !important; }
    .mw#{$infix}-66   { max-width: math.div(100%, 3)*2 !important; }
    .mw#{$infix}-75   { max-width: 75% !important; }
    .mw#{$infix}-100  { max-width: 100% !important; }

    .h#{$infix}-auto { height: auto !important; }
    .h#{$infix}-0    { height: 0 !important; }
    .h#{$infix}-10   { height: 10% !important; }
    .h#{$infix}-25   { height: 25% !important; }
    .h#{$infix}-33   { height: math.div(100%, 3) !important; }
    .h#{$infix}-50   { height: 50% !important; }
    .h#{$infix}-66   { height: math.div(100%, 3)*2 !important; }
    .h#{$infix}-75   { height: 75% !important; }
    .h#{$infix}-100  { height: 100% !important; }

    // .fa#{$infix}-start    { @include flexMe($align-items: flex-start); }
    // .fa#{$infix}-end      { @include flexMe($align-items: flex-end); }
    // .fa#{$infix}-center   { @include flexMe($align-items: center); }
    // .fa#{$infix}-stretch  { @include flexMe($align-items: stretch); }
    // .fa#{$infix}-baseline { @include flexMe($align-items: baseline); }

    .fb#{$infix}-auto { flex-basis: auto; }
    .fb#{$infix}-10   { flex-basis: 10%; }
    .fb#{$infix}-25   { flex-basis: 25%; }
    .fb#{$infix}-33   { flex-basis: math.div(100%, 3); }
    .fb#{$infix}-50   { flex-basis: 50%; }
    .fb#{$infix}-66   { flex-basis: math.div(100%, 3)*2; }
    .fb#{$infix}-75   { flex-basis: 75%; }
    .fb#{$infix}-100  { flex-basis: 100%; }

    .flex#{$infix}-row            { flex-direction: row !important; }
    .flex#{$infix}-column         { flex-direction: column !important; }
    .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }

    .flex#{$infix}-wrap         { flex-wrap: wrap !important; }
    .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }
    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    .flex#{$infix}-fill         { flex: 1 1 0 !important; }
    .flex#{$infix}-fill-auto    { flex: 1 1 auto !important; }
    .flex#{$infix}-fill-100     { flex: 1 1 100% !important; }
    .flex#{$infix}-grow-0       { flex-grow: 0 !important; }
    .flex#{$infix}-grow-1       { flex-grow: 1 !important; }
    .flex#{$infix}-shrink-0     { flex-shrink: 0 !important; }
    .flex#{$infix}-shrink-1     { flex-shrink: 1 !important; }

    .justify-content#{$infix}-start   { justify-content: flex-start !important; }
    .justify-content#{$infix}-end     { justify-content: flex-end !important; }
    .justify-content#{$infix}-center  { justify-content: center !important; }
    .justify-content#{$infix}-between { justify-content: space-between !important; }
    .justify-content#{$infix}-around  { justify-content: space-around !important; }

    .align-items#{$infix}-start    { align-items: flex-start !important; }
    .align-items#{$infix}-end      { align-items: flex-end !important; }
    .align-items#{$infix}-center   { align-items: center !important; }
    .align-items#{$infix}-baseline { align-items: baseline !important; }
    .align-items#{$infix}-stretch  { align-items: stretch !important; }

    .align-content#{$infix}-start   { align-content: flex-start !important; }
    .align-content#{$infix}-end     { align-content: flex-end !important; }
    .align-content#{$infix}-center  { align-content: center !important; }
    .align-content#{$infix}-between { align-content: space-between !important; }
    .align-content#{$infix}-around  { align-content: space-around !important; }
    .align-content#{$infix}-stretch { align-content: stretch !important; }

    .align-self#{$infix}-auto     { align-self: auto !important; }
    .align-self#{$infix}-start    { align-self: flex-start !important; }
    .align-self#{$infix}-end      { align-self: flex-end !important; }
    .align-self#{$infix}-center   { align-self: center !important; }
    .align-self#{$infix}-baseline { align-self: baseline !important; }
    .align-self#{$infix}-stretch  { align-self: stretch !important; }

    @each $size in map-keys($spacing-breakpoints) {
      .m#{$infix}-#{string.slice($size, 1, 1)} { margin: map.get($spacing-breakpoints, $size) !important; }
      .mt#{$infix}-#{string.slice($size, 1, 1)} { margin-top: map.get($spacing-breakpoints, $size) !important; }
      .mr#{$infix}-#{string.slice($size, 1, 1)} { margin-right: map.get($spacing-breakpoints, $size) !important; }
      .mb#{$infix}-#{string.slice($size, 1, 1)} { margin-bottom: map.get($spacing-breakpoints, $size) !important; }
      .ml#{$infix}-#{string.slice($size, 1, 1)} { margin-left: map.get($spacing-breakpoints, $size) !important; }
      .mx#{$infix}-#{string.slice($size, 1, 1)} { margin-right: map.get($spacing-breakpoints, $size) !important; margin-left: map.get($spacing-breakpoints, $size) !important; }
			.my#{$infix}-#{string.slice($size, 1, 1)} { margin-top: map.get($spacing-breakpoints, $size) !important; margin-bottom: map.get($spacing-breakpoints, $size) !important; }

      @if ($size != map.get($spacing-breakpoints, auto)) {
        .p#{$infix}-#{string.slice($size, 1, 1)} { padding: map.get($spacing-breakpoints, $size) !important; }
        .pt#{$infix}-#{string.slice($size, 1, 1)} { padding-top: map.get($spacing-breakpoints, $size) !important; }
        .pr#{$infix}-#{string.slice($size, 1, 1)} { padding-right: map.get($spacing-breakpoints, $size) !important; }
        .pb#{$infix}-#{string.slice($size, 1, 1)} { padding-bottom: map.get($spacing-breakpoints, $size) !important; }
        .pl#{$infix}-#{string.slice($size, 1, 1)} { padding-left: map.get($spacing-breakpoints, $size) !important; }
        .px#{$infix}-#{string.slice($size, 1, 1)} { padding-right: map.get($spacing-breakpoints, $size) !important; padding-left: map.get($spacing-breakpoints, $size) !important; }
				.py#{$infix}-#{string.slice($size, 1, 1)} { padding-top: map.get($spacing-breakpoints, $size) !important; padding-bottom: map.get($spacing-breakpoints, $size) !important; }
      }
    }
  }
}
